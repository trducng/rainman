Object.defineProperty(exports,"__esModule",{value:true});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _class,_temp2,_jsxFileName='src/screens/WordScreen.js';var _react=require('react');var _react2=_interopRequireDefault(_react);var _reactNative=require('react-native');var _reactRedux=require('react-redux');var _styles=require('../styles');var _screens=require('../styles/screens');var _WordScreen=require('../styles/screens/WordScreen');var _WordScreen2=_interopRequireDefault(_WordScreen);var _StatusBarButtonHolder=require('../components/StatusBarButtonHolder');var _StatusBarButtonHolder2=_interopRequireDefault(_StatusBarButtonHolder);var _DynamicViewPager=require('../components/DynamicViewPager');var _DynamicViewPager2=_interopRequireDefault(_DynamicViewPager);var _DB=require('../constants/DB');var _Meta=require('../constants/Meta');var _utils=require('../api/utils');var _WordActions=require('../api/WordActions');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var WordScreen=(_temp2=_class=function(_React$Component){_inherits(WordScreen,_React$Component);function WordScreen(){var _ref;var _temp,_this,_ret;_classCallCheck(this,WordScreen);for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}return _ret=(_temp=(_this=_possibleConstructorReturn(this,(_ref=WordScreen.__proto__||Object.getPrototypeOf(WordScreen)).call.apply(_ref,[this].concat(args))),_this),_this._getLeftPage=function(){if(_Meta.VERBOSE>=5){console.log('WordScreen: get left page');}if(_this.props.allWords.length===0){return _react2.default.createElement(_reactNative.View,{style:[_screens.screenGeneral,_WordScreen2.default.main],__source:{fileName:_jsxFileName,lineNumber:119}},_react2.default.createElement(_reactNative.Text,{style:_WordScreen2.default.word,__source:{fileName:_jsxFileName,lineNumber:120}},'This deck is empty!'),_react2.default.createElement(_reactNative.Text,{style:_WordScreen2.default.def,__source:{fileName:_jsxFileName,lineNumber:121}},'There are currently no words, please add some!'));}var word=_this.props.allWords[(0,_utils.mod)(_this.props.currentWord-1,_this.props.allWords.length)];return _react2.default.createElement(_reactNative.View,{style:[_screens.screenGeneral,_WordScreen2.default.main],__source:{fileName:_jsxFileName,lineNumber:130}},_react2.default.createElement(_reactNative.Text,{style:_WordScreen2.default.word,__source:{fileName:_jsxFileName,lineNumber:131}},word[_DB.WORD]),_react2.default.createElement(_reactNative.Text,{style:_WordScreen2.default.def,__source:{fileName:_jsxFileName,lineNumber:132}},word[_DB.DEFINITION]));},_this._getRightPage=function(){if(_Meta.VERBOSE>=5){console.log('WordScreen: get right page');}if(_this.props.allWords.length===0){return _react2.default.createElement(_reactNative.View,{style:[_screens.screenGeneral,_WordScreen2.default.main],__source:{fileName:_jsxFileName,lineNumber:144}},_react2.default.createElement(_reactNative.Text,{style:_WordScreen2.default.word,__source:{fileName:_jsxFileName,lineNumber:145}},'This deck is empty!'),_react2.default.createElement(_reactNative.Text,{style:_WordScreen2.default.def,__source:{fileName:_jsxFileName,lineNumber:146}},'There are currently no words, please add some!'));}var word=_this.props.allWords[(0,_utils.mod)(_this.props.currentWord+1,_this.props.allWords.length)];return _react2.default.createElement(_reactNative.View,{style:[_screens.screenGeneral,_WordScreen2.default.main],__source:{fileName:_jsxFileName,lineNumber:155}},_react2.default.createElement(_reactNative.Text,{style:_WordScreen2.default.word,__source:{fileName:_jsxFileName,lineNumber:156}},word[_DB.WORD]),_react2.default.createElement(_reactNative.Text,{style:_WordScreen2.default.def,__source:{fileName:_jsxFileName,lineNumber:157}},word[_DB.DEFINITION]));},_this._getMainPage=function(){if(_Meta.VERBOSE>=5){console.log('Get Main Page');}console.log('Current word');console.log(_this.props.currentWord);console.log('allWords');console.log(_this.props.allWords);if(_this.props.allWords.length===0){return _react2.default.createElement(_reactNative.View,{style:[_screens.screenGeneral,_WordScreen2.default.main],__source:{fileName:_jsxFileName,lineNumber:173}},_react2.default.createElement(_reactNative.Text,{style:_WordScreen2.default.word,__source:{fileName:_jsxFileName,lineNumber:174}},'This deck is empty!'),_react2.default.createElement(_reactNative.Text,{style:_WordScreen2.default.def,__source:{fileName:_jsxFileName,lineNumber:175}},'There are currently no words, please add some!'));}var word=_this.props.allWords[_this.props.currentWord];return _react2.default.createElement(_reactNative.View,{style:[_screens.screenGeneral,_WordScreen2.default.main],__source:{fileName:_jsxFileName,lineNumber:183}},_react2.default.createElement(_reactNative.Text,{style:_WordScreen2.default.word,__source:{fileName:_jsxFileName,lineNumber:184}},word[_DB.WORD]),_react2.default.createElement(_reactNative.Text,{style:_WordScreen2.default.def,__source:{fileName:_jsxFileName,lineNumber:185}},word[_DB.DEFINITION]));},_this._onSwipedRight=function(){_this.props.setCurrentWord((0,_utils.mod)(_this.props.currentWord+1,_this.props.allWords.length));},_this._onSwipedLeft=function(){_this.props.setCurrentWord((0,_utils.mod)(_this.props.currentWord-1,_this.props.allWords.length));},_this._onSwipedFail=function(){},_temp),_possibleConstructorReturn(_this,_ret);}_createClass(WordScreen,[{key:'render',value:function render(){return _react2.default.createElement(_DynamicViewPager2.default,{onSwipedRight:this._onSwipedRight,onSwipedLeft:this._onSwipedLeft,onSwipedFail:this._onSwipedFail,getLeftPage:this._getLeftPage,getRightPage:this._getRightPage,getMainPage:this._getMainPage,__source:{fileName:_jsxFileName,lineNumber:101}});}}]);return WordScreen;}(_react2.default.Component),_class.navigationOptions=function(_ref2){var navigation=_ref2.navigation,screenProps=_ref2.screenProps;var params=navigation.state.params;var allWords=screenProps.allWords,currentWord=screenProps.currentWord,onDeleteWord=screenProps.onDeleteWord;return{title:'Word Detail',headerTintColor:'white',headerStyle:_styles.appBarStyle,headerRight:_react2.default.createElement(_StatusBarButtonHolder2.default,{onDelete:function onDelete(){if(_Meta.VERBOSE>=5){console.log('WordScreen: delete index: '+currentWord);}_reactNative.Alert.alert('Confirm Delete','Are you sure to delete the word \''+allWords[currentWord][_DB.WORD]+'\'?',[{text:'Cancel'},{text:'Delete',onPress:function onPress(){if(_Meta.VERBOSE>=5){console.log('WordScreen: delete word');}navigation.goBack();onDeleteWord(allWords[currentWord][_DB.WORD]);}}],{cancelable:false});},onEdit:function onEdit(){if(_Meta.VERBOSE>=5){console.log('WordScreen: edit index: '+currentWord);}navigation.navigate('Edit',{word:allWords[currentWord]});},__source:{fileName:_jsxFileName,lineNumber:68}})};},_temp2);var mapStateToProps=function mapStateToProps(state,ownProps){return{currentWord:state.currentWord,allWords:state.wordData.ALL_WORDS};};var mapDispatchToProps=function mapDispatchToProps(dispatch,ownProps){return{setCurrentWord:function setCurrentWord(idx){return dispatch((0,_WordActions.displayWord)(idx));}};};exports.default=(0,_reactRedux.connect)(mapStateToProps,mapDispatchToProps)(WordScreen);
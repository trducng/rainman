Object.defineProperty(exports,"__esModule",{value:true});exports.filterWordList=undefined;var _jsxFileName='src/screens/WordListScreen.js';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _expo=require('expo');var _expo2=_interopRequireDefault(_expo);var _react=require('react');var _react2=_interopRequireDefault(_react);var _reactNative=require('react-native');var _reactRedux=require('react-redux');var _styles=require('../styles');var _screens=require('../styles/screens');var _WordListItem=require('../components/WordListItem');var _WordListItem2=_interopRequireDefault(_WordListItem);var _SearchBox=require('../components/SearchBox');var _SearchBox2=_interopRequireDefault(_SearchBox);var _WordListActions=require('../api/WordListActions');var _WordActions=require('../api/WordActions');var _DB=require('../constants/DB');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var filterWordList=exports.filterWordList=function filterWordList(wordList,searchTerm){if(searchTerm===''){return wordList;}var s=searchTerm.toLowerCase();return wordList.filter(function(wordObj){return wordObj[_DB.WORD].toLowerCase().indexOf(s)+wordObj[_DB.DEFINITION].toLowerCase().indexOf(s)>-2;});};var WordListScreen=function(_React$Component){_inherits(WordListScreen,_React$Component);function WordListScreen(){_classCallCheck(this,WordListScreen);return _possibleConstructorReturn(this,(WordListScreen.__proto__||Object.getPrototypeOf(WordListScreen)).apply(this,arguments));}_createClass(WordListScreen,[{key:'render',value:function render(){var _this2=this;return _react2.default.createElement(_reactNative.View,{style:_screens.screenGeneral,__source:{fileName:_jsxFileName,lineNumber:94}},_react2.default.createElement(_reactNative.FlatList,{style:{flex:1},data:this.props.wordList,keyExtractor:function keyExtractor(item,index){return item[_DB.INDEX];},renderItem:function renderItem(_ref){var item=_ref.item,index=_ref.index;return _react2.default.createElement(_WordListItem2.default,{word:item[_DB.WORD],def:item[_DB.DEFINITION],onPress:function onPress(){var idx=_this2.props.allWords.findIndex(function(i){return item[_DB.WORD]===i[_DB.WORD];});_this2.props.setCurrentWord(idx);_this2.props.navigation.navigate('Detail');},__source:{fileName:_jsxFileName,lineNumber:100}});},__source:{fileName:_jsxFileName,lineNumber:95}}));}}],[{key:'navigationOptions',value:function navigationOptions(_ref2){var navigation=_ref2.navigation,screenProps=_ref2.screenProps;return{title:'Word List',headerTintColor:'white',headerStyle:_styles.appBarStyle,headerRight:_react2.default.createElement(_SearchBox2.default,{onChangeText:screenProps.onSearch,value:screenProps.searchTerm,__source:{fileName:_jsxFileName,lineNumber:85}})};}}]);return WordListScreen;}(_react2.default.Component);var mapStateToProps=function mapStateToProps(state,ownProps){return{wordList:filterWordList(state.wordData.ALL_WORDS,state.searchTerm),allWords:state.wordData.ALL_WORDS};};var mapDispatchToProps=function mapDispatchToProps(dispatch,ownProps){return{setCurrentWord:function setCurrentWord(idx){return dispatch((0,_WordActions.displayWord)(idx));}};};exports.default=(0,_reactRedux.connect)(mapStateToProps,mapDispatchToProps)(WordListScreen);
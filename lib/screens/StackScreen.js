Object.defineProperty(exports,"__esModule",{value:true});exports.StackScreen=undefined;var _jsxFileName='src/screens/StackScreen.js';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _react=require('react');var _react2=_interopRequireDefault(_react);var _reactNative=require('react-native');var _reactNavigation=require('react-navigation');var _reactRedux=require('react-redux');var _propTypes=require('prop-types');var _propTypes2=_interopRequireDefault(_propTypes);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var Screen1=function(_React$Component){_inherits(Screen1,_React$Component);function Screen1(){_classCallCheck(this,Screen1);return _possibleConstructorReturn(this,(Screen1.__proto__||Object.getPrototypeOf(Screen1)).apply(this,arguments));}_createClass(Screen1,[{key:'render',value:function render(){var _this2=this;return _react2.default.createElement(_reactNative.View,{__source:{fileName:_jsxFileName,lineNumber:12}},_react2.default.createElement(_reactNative.Text,{__source:{fileName:_jsxFileName,lineNumber:13}},'This is screen 1'),_react2.default.createElement(_reactNative.Button,{onPress:function onPress(){return _this2.props.navigation.dispatch(_reactNavigation.NavigationActions.navigate({routeName:'S2'}));},title:'Go to screen 2',__source:{fileName:_jsxFileName,lineNumber:14}}));}}]);return Screen1;}(_react2.default.Component);var Screen2=function(_React$Component2){_inherits(Screen2,_React$Component2);function Screen2(){_classCallCheck(this,Screen2);return _possibleConstructorReturn(this,(Screen2.__proto__||Object.getPrototypeOf(Screen2)).apply(this,arguments));}_createClass(Screen2,[{key:'render',value:function render(){return _react2.default.createElement(_reactNative.View,{__source:{fileName:_jsxFileName,lineNumber:27}},_react2.default.createElement(_reactNative.Text,{__source:{fileName:_jsxFileName,lineNumber:28}},'This is screen 2'));}}]);return Screen2;}(_react2.default.Component);var StackScreen=exports.StackScreen=(0,_reactNavigation.StackNavigator)({S1:{screen:Screen1},S2:{screen:Screen2}});var StackScreenNav=function(_React$Component3){_inherits(StackScreenNav,_React$Component3);function StackScreenNav(){_classCallCheck(this,StackScreenNav);return _possibleConstructorReturn(this,(StackScreenNav.__proto__||Object.getPrototypeOf(StackScreenNav)).apply(this,arguments));}_createClass(StackScreenNav,[{key:'render',value:function render(){return _react2.default.createElement(StackScreen,{navigation:(0,_reactNavigation.addNavigationHelpers)({dispatch:this.props.dispatch,state:this.props.nav}),__source:{fileName:_jsxFileName,lineNumber:43}});}}]);return StackScreenNav;}(_react2.default.Component);StackScreenNav.propTypes={dispatch:_propTypes2.default.func.isRequired,nav:_propTypes2.default.object.isRequired};var mapStateToProps=function mapStateToProps(state){return{nav:state.nav_list};};exports.default=(0,_reactRedux.connect)(mapStateToProps)(StackScreenNav);